{"name":"Graphshaper","body":"# So you want to shape a graph...\r\n\r\nImagine sitting on your computer in desperate need for a graph. You toss and you turn – where do I get a realistic graph? **Graphshaper** to the rescue – your all-in-one solution for generating scale-free networks.\r\n\r\n## Why would I ever want to do that?\r\n\r\nI created this gem for my bachelor thesis, where I will implement certain graph algorithms in the new NoSQL database [AvocadoDB](http://www.avocadodb.org). I will compare the performance to existing solutions, therefore I need the same graph in different database systems. And – of course – I need some pretty pictures for my thesis, so I included an export to PNG via dot.\r\n\r\n## What do you mean when you say realistic?\r\n\r\nIf you would generate a bunch of vertices and then connect them with vertices at random, you don't get a realistic network. Most real world, large networks follow the power-law in their node distribution. To generate a graph that has the same attributes, **graphshaper** uses an algorithm based upon the Barabási-Albert model introduced by R. Albert and A.-L. Barabási in 2002.\r\n\r\n## Ok, and how would I generate a graph now?\r\n\r\nFirst you would install **graphshaper** from ruby gems. You can either do that via `gem install graphshaper` or – in your bundler file – via `gem 'graphshaper', '~> 0.2.2'`.\r\nYou can either use **graphshaper** via the command line or in your Ruby code as a library. For the latter I refer you to the [documentation](http://rubydoc.info/github/moonglum/graphshaper). The commandline tool expects one argument: The number of vertices you want your generated graph to have. This is how to use it:\r\n\r\n    graphshaper [options] size\r\n\r\nYou can use the following options:\r\n\r\n* `-a`, `--avocado`: Store the graph in a local AvocadoDB instance\r\n* `-l`, `--log`: Store the graph in two CSV files for nodes and edges\r\n* `-d`, `--dot`: Store the graph in the dot format\r\n* `-p`, `--png`: Export the graph as a PNG (you need to install graphviz for that – circo is used for the layout)\r\n* `--version`: Show version\r\n\r\n## Format Support\r\n\r\nCurrently you can only export the graph to CSV, AvocadoDB and the dot format. You can of course use the CSV files to import them into any system, but I will also add support for more systems (MySQL and Neo4j) very soon. If you need any other format or system, feel free to send me a (well rspec'ed) pull request :)","tagline":"Generate realistic graphs","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}